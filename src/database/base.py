# src/database/base.py
from __future__ import annotations
from typing import Any, Protocol, Callable, Dict, List

Callback = Callable[[dict | list | None], None]

class DatabaseManager(Protocol):
    # ---- Realtime ----
    def on(self, channel: str, callback: Callback) -> str: ...
    def off(self, token: str) -> None: ...

    # ---- Cases ----
    def get_all_cases(self) -> Dict[str, dict]: ...
    def add_case(self, data: dict) -> str: ...
    def delete_case(self, case_id: str) -> None: ...

    # ---- Proformas ----
    def get_all_proformas(self) -> Dict[str, dict]: ...
    def add_proforma(self, data: dict) -> str: ...
    def delete_proforma(self, proforma_id: str) -> None: ...

    # ---- Clients ----
    def get_all_clients(self) -> Dict[str, dict]: ...
    def check_and_add_client(self, name: str) -> str: ...
    def delete_client(self, client_id: str) -> None: ...

    # ---- Suppliers ----
    def get_all_suppliers(self) -> List[dict] | Dict[str, dict]: ...
    def add_supplier(self, name: str) -> str: ...
    def delete_supplier(self, supplier_id: str) -> None: ...

    # ---- Cargo ----
    def get_all_cargo(self) -> Dict[str, dict] | List[dict]: ...
    def add_cargo(self, data: dict) -> str: ...
    def delete_cargo(self, cargo_id: str) -> None: ...

    # ---- Managers ----
    def get_all_managers(self) -> List[str] | Dict[str, Any]: ...

    # ---- Уникальность номера дела для проформ ----
    def reserve_proforma_case_number(self, case_number: str) -> bool: ...
    def release_proforma_case_number(self, case_number: str) -> None: ...